dcp2 is a distributed config pushing tool

The intention is to have an admin host which holds a collection of
sparse directory for a variety of machines.

These are kept under version control and can be:
* compared to the host
* aligned with peers

Support a simple operational model:
* change the host and record later

INSTALLATION

Add to sudoers:
  Defaults env_keep+="GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL"
to allow a pass-through environment for git logs.

run:

dcp2_init
dcp2_add_host cocoa egroup
dcp2_track_files -a -r -m"Monitor /etc" /etc/
dcp2_pull -a
dcp2_commit -a -m"Initial pull of remote files"


Change a file on a host then :
  dcp2_status -a
will show what's changed.

Then:
  dcp2_pull -a
will bring all the changes to the store

When this is done execute :
  dcp2_commit $host
to commit all changes.

If you only want to commit some files :
  dcp2_commit $host -m"Updated fstab with new partition" /etc/fstab

If you only want to commit package installation changes :
  dcp2_commit $host /etc/fstab



DOCUMENTATION

* dcp2_init

  This command is run once to create a site area that holds each host
  as a git submodule. This isn't used yet.

* dcp2_add_host

  This is used to create a git repository for hosts. It also updates
  a host repository to use the latest hooks (eg to manage metadata).

* dcp2_track_files

  Adds files or directories to the list of files to rsync but does no
  data transfer. Used to add new areas beyond the base /etc/ tree and
  to filter out unwanted files.
  Currently supports:
  * specific files
  * -r allows files to be pulled recursively (eg /etc)
  * exclusion file (not tested yet)

  (needs to allow exclude editing)
  Forces a commit of the new filelist/dirlist/excludefile

* dcp2_pull

  The primary tool to update a repo from the remote host(s).
  Pull files tracked by dcp from host to the sparse tree.
  Doesn't do any commits.

* dcp2_commit

  By default commits manifest, all outstanding changed files and new files
  Can commit just certain files or manifest etc

* dcp2_status

  Reports the git status for uncommitted local changes, metadata
  status for changes to file ownership, permissions etc and any files
  that are out of sync between the repo and the host.

  Can also show what files on the remote system are tracked.



store format:

${host}/
  files		     list of specific files pulled by rsync xfer
  dirs       	     list of dirs pulled recursively by rsync xfer
  exclude_patterns   list of exclusions applied to all rsync xfers
  metastore  	     holds file metadata (for now)
  sparse/    	     rsync'ed copy of remote tree



